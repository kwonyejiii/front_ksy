-----------------------------------------------------------------------------
⭐CSS Position⭐
        요소의 위치를 결정하는 방식을 설정
        왼쪽꼭지점이 기준

    1. 정적 위치 지정방식 (static)
    : 기본값
    HTML 요소의 위치를 결정하는 기본적인 방식
    top, left, right, bottom 속성들을 사용할 수 없음
    단순히 웹페이지의 흐름에 따라 차례대로 요소들의 위치를 결정

    2. 상대 위치 지정(relative)
    : "HTML 요소의 기본 위치를 기준"으로 위치를 재설정 하는 방식을
    기본 위치는 정적 위치 지정방ㅅ기일 때 결정되는 위치를 의미

    3. 고정 위치 지정방식(fixed)
    : 뷰포트를 기준으로 위치를 설정하는 방식
    웹 페이가 스크롤 되어도 고정위치로 지정된 요소는 항상 같은 곳에 위치

    4. 절대 위치 지정방식 (absolute)
    eg) 위에 겹쳐서 나오게 할때
    :뷰포트를 기준으로 위치를 설정하는 방식
    "조상(부모) 요소를 기준"으로 위치를 조정할 수 있음
    조상 요소를 가지지 않으면 body 요소를 기준으로 위치를 결정한다.

    fixed, absolute => 절대위치(다른 div요소에 영향x)
                        단, absolute은 부모요소안에서
------------------------------------------------------------------------------------   

z-index (레이아웃의 우선 순위 누가 더 앞에 있나)
 
    HTML 요소의 위치를 설정하면 위치 방식에 따라 겹쳐서 나타나게 될 수 있음.
    겹쳐지는 요소들이 쌓이는 순서를 결정할 때 사용
    순서는 음수,양수 모두 사용할 수 있음
    크기가 "클 수록 위에 위치", 작을 수록 아래에 위치

------------------------------------------------------------------------------------  
 
 flaot

    HTMl 요소가 주변(수평으로 나열된)의 다른 요소들과 자연스럽게 어울리도록 만들어줌
    float를 적용 받은 요소들의 다음 요소들이 끌어올려짐
    flaot를 적용 받은 요소들의 방향을 결정이 가능 (left, right)
    컨텐츠 크기 만큼 영역을 설정
    float를 적용 받은 요소는 다른 요소보다 위쪽에 위치
    수평 방향 정렬 시 사용 /* float: 끌어올려 정렬 */

clear
    float 속성이 적용된 '이후' 나타나는 요소들의 동작을 조절
    
    float 속성이 적용되면 그 이후에 등장하는 모든 요소들의 위치를 설정하기 어렵기 때문에
    clear 속성을 사용하여 이후에 등장하는 요소들이 더이상 float 속성에 영향 받지 않도록 설정

--------------------------------------------------------------------------------------

다단레이아웃

    텍스트의 단을 column 속성으로 나누어서 다단을 생성
    다단은 레이아웃을 여러개의 칼럼으로 쪼개서 구성한다는 의미

    column-count :나누어질 단의 개수를 설정
    column-rule : 단과 단 사이의 구분선 스타일을 설정
    column-gap : 단과 단 사이의 여백을 설정
    column-spqn : 단과 안의 포함된 요소를 다단편집에서 해제

---------------------------------------------------------------------------------------

⭐ flex ⭐(수평구성)
    eg) 부모에 flex주면 자식이 수평정렬됨

    플렉시블 레이아웃 (flaot)

        대부분의 웹사이트는 수직 구성
        레이아웃 구성시 가장 많이 사용되는 요소들은 대부분 블록 개념이기 때문에
        수직 구성은 쉽게 할 수 있으나 수평 구성은 구현하기가 쉽지 않음

        과거에는 '수평구'성은 float, inline-block으로 구성 현재 조금 더 쉽게 수평구성을 하기위해 flex를 사용한다. 
        하기위해 flex를 사용한다.
        display: flex;

    1) flex-wrap

    플렉스 라인에 더이상 여유가 없을 때 플렉스 요소의 위치를 다음 줄로 넘겨줄지 여부
    nowrap : 기본 설정, 일렬로 나옴
    wrap : 다음 줄로 넘어감
    wrap-reverse : 아래쪽이 아니라 위쪽으로 넘김

    2) jusrtify-content

    플랙스 요소의 수평방향 정렬 방식 설정

    flex-start : 기본설정, 앞쪽부터
    flex-end :뒤쪽에서부터 배치
    center : 가운데 배치

    space-between : 요소들 사이에 여백
    space-around : 요소들 사이에 동일 여백을 두고 배치
    space-evenly : 요소들 주변에 일정한 여백들 두고 배치

    3) align-items

        플랙스 요소의 수직방향 정렬 방식을 설정
    stretch : 기본설정, 플렉스 요소의 높이가 컨테이너의 높이와 같게 변경된 뒤 이어서  수평정렬
    flex-start : 위쪽부터 배치
    flex-end : 아래쪽부터 배치
    center :   가운데 배치
    baseline : 기준선에 배치

